---
# tasks file for grafana_loki

- name: Create Loki user group
  ansible.builtin.group:
    name: loki
    state: present
  become: true
  notify:
    - Restart Loki

- name: Create Loki system user
  ansible.builtin.user:
    name: loki
    comment: Loki service user
    group: loki
    state: present
    system : true
  become: true
  notify:
    - Restart Loki

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: loki
  become: true
  loop:
    - "{{ install_dir }}"
    - "{{ install_dir }}/conf"
    - "{{ install_dir }}/data"
  notify:
    - Restart Loki

- name: Install a Grafana Loki package
  ansible.builtin.apt:
    deb: "{{ package_url }}"
  become: true

- name: Create service definition file
  ansible.builtin.template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
  become: true
  notify:
    - Restart Loki

- name: Create Loki configuration file
  ansible.builtin.template:
    src: local-config.yaml.j2
    dest: "{{ install_dir }}/conf/local-config.yaml"
    owner: loki
    group: loki
  become: true
  notify:
    - Restart Loki

# - name: Wait until Grafana Tempo is up and running...
#   uri:
#     url: 'http://{{ ansible_default_ipv4.address }}:3100/ready
#     return_content: yes
#     validate_certs: no
#     status_code:
#       - 200
#   until: uri_output.status == 200
#   retries: 24 # Retries for 24 * 15 seconds = 360 seconds = 6 minutes
#   delay: 15 # Every 15 seconds
#   register: uri_output

# - name: API test result
#   debug:
#     msg: "{{ uri_output }}"
