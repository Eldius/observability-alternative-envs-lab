---
# tasks file for grafana
- name: Debug architecture
  debug:
    msg: "{{ ansible_architecture }}"

- name: Install Grafana package
  ansible.builtin.apt:
    deb: "{{ package_url }}"
  become: true
  register: install_task_res

- name: Generate grafana.ini file
  ansible.builtin.template:
    src: grafana.ini
    dest: /etc/grafana/grafana.ini
    owner: grafana
    group: grafana
  become: true
  register: ini_task_res

- name: Generate custom.ini file
  ansible.builtin.file:
    path: /var/lib/grafana/grafana.db
    state: absent
  become: true
  when: ini_task_res.changed or install_task_res.changed

- name: Restart Grafana
  block:
    - name: Enable service
      ansible.builtin.service:
        name: "grafana-server"
        enabled: true
        daemon_reload: true
    - name: Restart service
      ansible.builtin.service:
        name: "grafana-server"
        state: "restarted"
  become: true
  when: ini_task_res.changed or install_task_res.changed

- name: Wait until Grafana is up and running...
  uri:
    url: 'http://{{ ansible_default_ipv4.address }}:3000/api/health'
    return_content: yes
    validate_certs: no
    status_code:
      - 200
  until: uri_output.status == 200
  retries: 24 # Retries for 24 * 15 seconds = 360 seconds = 6 minutes
  delay: 15 # Every 15 seconds
  register: uri_output

- name: API test result
  debug:
    msg: "{{ uri_output }}"

- name: Remove default organization
  community.grafana.grafana_organization:
    url: "http://{{ ansible_default_ipv4.address }}:3000"
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"
    name: "Default Org"
    state: absent
  ignore_errors: true

- name: Create an organization
  community.grafana.grafana_organization:
    url: "http://{{ ansible_default_ipv4.address }}:3000"
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"
    name: "{{ org_name }}"
    state: present

- name: Create Loki datasource
  community.grafana.grafana_datasource:
    name: Loki (default)
    ds_type: loki
    ds_url: http://{{ ansible_default_ipv4.address }}:3100
    url: http://{{ ansible_default_ipv4.address }}:3000
    access: proxy
    state: present
    uid: "cdea4da2-22c6-11ef-96be-00155d5e2a9e"
    org_name: "{{ org_name }}"
    tls_skip_verify: true
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"
  register: loki_datasource

- name: Debug 1
  debug:
    msg: "{{ loki_datasource }}"

- name: Create prometheus datasource
  community.grafana.grafana_datasource:
    name: Prometheus (default)
    ds_type: prometheus
    ds_url: "http://{{ ansible_default_ipv4.address }}:9090"
    access: proxy
    uid: "d77b5686-22c6-11ef-867d-00155d5e2a9e"
    org_name: "{{ org_name }}"
    tls_skip_verify: true
    url: "http://{{ ansible_default_ipv4.address }}:3000"
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"

- name: Create Tempo datasource
  community.grafana.grafana_datasource:
    name: "tempo"
    url: http://{{ ansible_default_ipv4.address }}:3000
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"
    org_name: "{{ org_name }}"
    ds_type: tempo
    ds_url: http://{{ ansible_default_ipv4.address }}:3200
    uid: "1b073e0c-30bd-11ef-a9b9-00155dc7a883"
    access: proxy
    state: present
    tls_skip_verify: true
  register: tempo_datasource

- name: Debug 2
  debug:
    msg: "{{ tempo_datasource }}"

- name: Log dashboard
  community.grafana.grafana_dashboard:
    grafana_url: "http://{{ ansible_default_ipv4.address }}:3000"
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"
    commit_message: "Updating log dashboard"
    dashboard_id: 18702
    org_name: "{{ org_name }}"
    state: present
    uid: "df31d896-22c6-11ef-8321-00155d5e2a9f"
    overwrite: true

- name: Trace dashboard
  community.grafana.grafana_dashboard:
    grafana_url: "http://{{ ansible_default_ipv4.address }}:3000"
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_pass }}"
    commit_message: "Configuring trace dashboard"
    dashboard_id: 20600
    org_name: "{{ org_name }}"
    state: present
    uid: "801d24fa-30bd-11ef-adbc-00155dc7a883"
    overwrite: true
