---
# tasks file for grafana
- name: Debug architecture
  debug:
    msg: "{{ ansible_architecture }}"
  notify:
    - Restart Grafana

- name: Install Grafana package
  ansible.builtin.apt:
    deb: "{{ package_url }}"
  become: true
  notify:
    - Restart Grafana

- name: Configure Loki datasource
  ansible.builtin.copy:
    src: ../files/datasources/loki.yaml
    dest: /usr/share/grafana/conf/provisioning/datasources/loki.yaml
  become: true
  notify:
    - Restart Grafana

- name: Configure Loki dashboard
  ansible.builtin.copy:
    src: ../files/dashboards/loki.json
    dest: /usr/share/grafana/conf/provisioning/dashboards/loki.json
  become: true
  notify:
    - Restart Grafana

- name: Generate custom.ini file
  ansible.builtin.copy:
    src: ../files/conf/custom.ini
    dest: /etc/grafana/grafana.ini
  become: true
  notify:
    - Restart Grafana

- name: Create Loki datasource
  community.grafana.grafana_datasource:
    name: Loki
    ds_type: loki
    ds_url: http://localhost:3100
    access: proxy
    tls_skip_verify: true
  when: create_loki_datasource

- name: Create Prometheus datasource
  community.grafana.grafana_datasource:
    name: Prometheus
    ds_type: prometheus
    ds_url: http://localhost:9090
    access: proxy
    tls_skip_verify: true
    additional_json_data:
      httpMethod: POST
      manageAlerts: true
      prometheusType: Prometheus
      prometheusVersion: 2.44.0
      cacheLevel: 'High'
      disableRecordingRules: false
      incrementalQueryOverlapWindow: 10m
    enforce_secure_data: true
  when: create_prometheus_datasource
